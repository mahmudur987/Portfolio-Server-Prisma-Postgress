


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
        

enum Role{
  ADMIN
  USER
  }
enum projectType{
  Personal
  Client
  }
enum userStatus {
  ACTIVE
  INACTIVE
  PENDING
  BLOCKED
  }
// Removed invalid enum for socialLinks; use `Json` field on User to store structured social links.

// user model

model User {
  id      String @id @default( uuid() )
  name    String
  email   String @unique
  password String
  role    Role @default(USER)
  phone   String @default("+8801671706882")
  address String @default("Dhaka, Bangladesh")
  profilePicture String? @default("https://i.ibb.co.com/S4KB6Hn4/PROFILE-2.png")
  logo    String     @default("https://i.ibb.co.com/n8mwFtDD/logo.png")
  socialLinks Json? 
  Experience Json?
  Skills Json?
  status  userStatus @default( ACTIVE )
  createdAt DateTime? @default(now())
  isVerified Boolean? @default(false)
  updatedAt DateTime @updatedAt 
  Posts Post[]
}


// post model
model Post {
  id      String @id @default( uuid() )
  title   String
  content String
  authorId  String
  author User @relation(fields: [authorId], references: [id])
  thumbnail String?
  isPublished Boolean @default(false)
  tags String[]
  views   Int @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Project {
  id          String   @id @default(uuid())
  projectName String
  title       String
  description String
  picture     String
  projectType  projectType @default(Personal)
  // Arrays for multiple values
  features     String[]
  technologies String[]

  // Optional timeline
  startDate DateTime?
  endDate   DateTime?

  // Links
  liveSite     String?
  git_frontend String?
  git_server   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
